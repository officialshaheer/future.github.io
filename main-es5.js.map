{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/playlist/playlist.component.html","webpack:///src/app/playlist/playlist.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","PlaylistComponent","streamedTracks","push","trackName","submitTrackToList","AppComponent","title","AppModule","NavbarComponent","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h1>Suggested Track</h1>\n<div class=\"table-wrapper\">\n    <table class=\"fl-table\">\n        <thead>\n        <tr>\n            <th>Track Name</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n            <td>{{trackName}}</td>\n        </tr>\n        <tbody>\n    </table>\n</div>\n\n<div class=\"table-wrapper2\" style=\"padding-top: 80px;\">\n    <div class=\"form__group\" style=\"padding-bottom: 20px;\">\n        <input type=\"text\" [(ngModel)]=\"trackName\" class=\"form__input\" id=\"songname\" placeholder=\"ENTER SONG NAME\" required=\"\" />\n    </div>\n    </div>\n    \n    <div class=\"table-wrapper\">\n    <div class=\"buttonContainer\">\n    <button class=\"button\" (click)=\"submitTrackToList()\">Send</button>\n    </div>\n</div>\n\n<h1>Streamed Tracks</h1>\n<div class=\"table-wrapper\" style=\"padding-top: 40px;\">\n    <table class=\"fl-table\">\n        <thead>\n        <tr>\n            <th>Track Name</th>\n            <th>Staus</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let track of streamedTracks\">\n            <td>{{track}}</td>\n            <td>Content 1</td>\n        </tr>\n        <tbody>\n    </table>\n</div>","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrls: ['./playlist.component.css']\n})\nexport class PlaylistComponent implements OnInit {\n\n  trackName: any;\n  streamedTracks: any = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  submitTrackToList() {\n    this.streamedTracks.push(this.trackName)\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n","<app-navbar></app-navbar>\n<app-playlist></app-playlist>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { PlaylistComponent } from './playlist/playlist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    PlaylistComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<style>\n    :host {\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n      font-size: 14px;\n      color: #333;\n      box-sizing: border-box;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n</style>\n\n<!-- NavBAR -->\n<div class=\"navigation-bar\" role=\"navigationBar\">\n\n    <span>Welcome</span>\n\n    <div class=\"spacer\">\n        <h2>Clubhouse Playlist</h2>\n    </div>\n    \n</div>\n\n<!-- Place your content here -->\n<div class=\"main-content\" role=\"mainContent\">\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}